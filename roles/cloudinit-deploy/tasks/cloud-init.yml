
- name: Load a variable file based on the cluster size.
  include_vars:
    file: small.yaml
    name: cluster size

- name: clone cloud-init from template
  proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ item.value.node }}"
    name: "{{ item.key }}"
    clone: "{{ item.value.template }}"
    net: '{{ item.value.net | default(defaults.net) }}'
    timeout: 1800
  with_dict: "{{ vms }}"
  loop_control:
    pause: 5
  notify:
    - sleep
  register: cloned_vms_pve
  when: item.value.cloudinit | default(true) | bool
  
- meta: flush_handlers
  when: cloned_vms_pve.changed

    
- name: update cloud-init settings
  proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ item.item.value.node }}"
    name: "{{ item.item.key }}"
    ipconfig: "{{ item.item.value.ipconfig | default(defaults.ipconfig) }}"
    sshkeys: "{{ item.item.value.sshkeys | default(defaults.sshkeys) | urlencode | replace('/','%2F') }}"
    cores: '{{ item.item.value.cores | default(defaults.cores) }}'
    vcpus: '{{ item.item.value.vcores | default(defaults.vcores) }}'
    memory: '{{ item.item.value.memory_size | default(defaults.memory_size) }}'
    balloon: '{{ item.item.value.balloon | default(defaults.balloon) }}'
    vga: 'serial0'
    serial: '{"serial0":"socket"}'
    ostype: '{{ item.item.value.ostype | default(defaults.ostype) }}'
    cpu: '{{ item.item.value.cpu | default(defaults.cpu) }}'
    bootdisk: "scsi0"
    boot: "c"
    update: yes
    timeout: 1800
  with_items: "{{ cloned_vms_pve.results }}"
  when: item.changed
  no_log: True

- name: start clones
  proxmox_kvm:
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    node: "{{ item.item.value.node }}"
    name: "{{ item.item.key }}"
    state: started
    timeout: 1800
  with_items: "{{ cloned_vms_pve.results }}"
  when: item.changed
  no_log: True